{
  "openapi": "3.0.0",
  "info": {
    "title": "HugData API",
    "description": "AI-powered SQL generation and database analytics platform",
    "version": "1.0.0",
    "contact": {
      "email": "support@hugdata.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "components": {
    "securitySchemes": {
      "sanctum": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "email": {"type": "string"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "Project": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "name": {"type": "string"},
          "description": {"type": "string"},
          "user_id": {"type": "string"},
          "settings": {"type": "object"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "DataSource": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "project_id": {"type": "string"},
          "name": {"type": "string"},
          "type": {"type": "string", "enum": ["postgresql", "mysql", "bigquery", "snowflake", "sqlite"]},
          "connection_config": {"type": "object"},
          "status": {"type": "string", "enum": ["active", "inactive"]},
          "last_connected_at": {"type": "string", "format": "date-time"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      },
      "Query": {
        "type": "object",
        "properties": {
          "id": {"type": "string"},
          "project_id": {"type": "string"},
          "user_id": {"type": "string"},
          "natural_language": {"type": "string"},
          "generated_sql": {"type": "string"},
          "results": {"type": "array", "items": {"type": "object"}},
          "status": {"type": "string", "enum": ["success", "error"]},
          "execution_time_ms": {"type": "number"},
          "created_at": {"type": "string", "format": "date-time"},
          "updated_at": {"type": "string", "format": "date-time"}
        }
      }
    }
  },
  "paths": {
    "/api/auth/login": {
      "post": {
        "summary": "User login",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {"type": "string", "format": "email", "example": "user@example.com"},
                  "password": {"type": "string", "format": "password", "example": "password"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"},
                    "token": {"type": "string"}
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {"type": "string", "example": "Invalid credentials"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/register": {
      "post": {
        "summary": "User registration",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "password_confirmation"],
                "properties": {
                  "name": {"type": "string", "example": "John Doe"},
                  "email": {"type": "string", "format": "email", "example": "user@example.com"},
                  "password": {"type": "string", "format": "password", "example": "password"},
                  "password_confirmation": {"type": "string", "format": "password", "example": "password"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful registration",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {"$ref": "#/components/schemas/User"},
                    "token": {"type": "string"}
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {"type": "string"},
                    "errors": {"type": "object"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "summary": "User logout",
        "tags": ["Authentication"],
        "security": [{"sanctum": []}],
        "responses": {
          "200": {
            "description": "Successful logout",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {"type": "string", "example": "Logged out successfully"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects": {
      "get": {
        "summary": "Get all projects",
        "tags": ["Projects"],
        "security": [{"sanctum": []}],
        "responses": {
          "200": {
            "description": "List of projects",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Project"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new project",
        "tags": ["Projects"],
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name"],
                "properties": {
                  "name": {"type": "string", "example": "My Analytics Project"},
                  "description": {"type": "string", "example": "Project description"},
                  "settings": {"type": "object"}
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Project created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Project"}
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{id}": {
      "get": {
        "summary": "Get a specific project",
        "tags": ["Projects"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Project details",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Project"}
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a project",
        "tags": ["Projects"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {"type": "string"},
                  "description": {"type": "string"},
                  "settings": {"type": "object"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Project updated successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/Project"}
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a project",
        "tags": ["Projects"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Project ID"
          }
        ],
        "responses": {
          "204": {
            "description": "Project deleted successfully"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/data-sources": {
      "get": {
        "summary": "Get data sources for a project",
        "tags": ["Data Sources"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Project ID"
          }
        ],
        "responses": {
          "200": {
            "description": "List of data sources",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/DataSource"}
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new data source",
        "tags": ["Data Sources"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "projectId",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Project ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "type", "connection_config"],
                "properties": {
                  "name": {"type": "string", "example": "Production Database"},
                  "type": {"type": "string", "enum": ["postgresql", "mysql", "bigquery", "snowflake", "sqlite"], "example": "postgresql"},
                  "connection_config": {
                    "type": "object",
                    "properties": {
                      "host": {"type": "string", "example": "localhost"},
                      "port": {"type": "string", "example": "5432"},
                      "database": {"type": "string", "example": "myapp"},
                      "username": {"type": "string", "example": "postgres"},
                      "password": {"type": "string", "example": "password"}
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Data source created successfully",
            "content": {
              "application/json": {
                "schema": {"$ref": "#/components/schemas/DataSource"}
              }
            }
          }
        }
      }
    },
    "/api/v1/data-sources/{id}/test": {
      "post": {
        "summary": "Test data source connection",
        "tags": ["Data Sources"],
        "security": [{"sanctum": []}],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {"type": "string"},
            "description": "Data Source ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Connection test result",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {"type": "boolean"},
                    "message": {"type": "string"},
                    "connected_at": {"type": "string", "format": "date-time"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queries/natural-language": {
      "post": {
        "summary": "Process natural language query",
        "tags": ["Queries"],
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["query", "project_id", "data_source_id"],
                "properties": {
                  "query": {"type": "string", "example": "Show me the top 10 customers by sales"},
                  "project_id": {"type": "string"},
                  "data_source_id": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "query_id": {"type": "string"},
                    "sql": {"type": "string"},
                    "explanation": {"type": "string"},
                    "results": {"type": "array", "items": {"type": "object"}},
                    "execution_time_ms": {"type": "number"},
                    "row_count": {"type": "integer"},
                    "confidence": {"type": "number", "format": "float"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queries/sql": {
      "post": {
        "summary": "Execute SQL query directly",
        "tags": ["Queries"],
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["sql", "data_source_id"],
                "properties": {
                  "sql": {"type": "string", "example": "SELECT * FROM customers LIMIT 10"},
                  "data_source_id": {"type": "string"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {"type": "array", "items": {"type": "object"}},
                    "execution_time_ms": {"type": "number"},
                    "row_count": {"type": "integer"}
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queries/suggest-charts": {
      "post": {
        "summary": "Get chart suggestions for query results",
        "tags": ["Queries"],
        "security": [{"sanctum": []}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["data_sample", "query_intent"],
                "properties": {
                  "data_sample": {"type": "array", "items": {"type": "object"}},
                  "query_intent": {"type": "string", "example": "show sales by region"}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chart suggestions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "chart_type": {"type": "string", "example": "bar"},
                      "configuration": {
                        "type": "object",
                        "properties": {
                          "xAxis": {"type": "string"},
                          "yAxis": {"type": "string"},
                          "title": {"type": "string"}
                        }
                      },
                      "confidence": {"type": "number", "format": "float"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/queries/history": {
      "get": {
        "summary": "Get query history",
        "tags": ["Queries"],
        "security": [{"sanctum": []}],
        "responses": {
          "200": {
            "description": "Query history",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {"$ref": "#/components/schemas/Query"}
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}